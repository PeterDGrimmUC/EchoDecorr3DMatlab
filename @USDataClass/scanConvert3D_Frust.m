function scanConvert3D_Frust( obj )
%SCANCONVERT3D_FRUST Summary of this function goes here
%   Detailed explanation goes here
    R0 = obj.R0;
    frustumPoints = obj.frustumPoints;
    dr = obj.dr;
    LR = obj.LR;
    Lmu = obj.Lmu;
    dmu = obj.dmu;
    dnu = obj.dnu;
    Lnu = obj.Lnu;
    iR = obj.iR;
    imu = obj.imu;
    inu = obj.inu;
    for currFrame = 1:size(obj.rawData,4)
        Isph = squeeze(obj.rawData(:,:,:,currFrame));
        Icart = zeros(size(R0));
        for ip = 1:length(frustumPoints)
            q = frustumPoints(ip);

            % differences to be used below, trying to save a few flops
            drmLR = dr-LR(q);
            dmumLmu = dmu-Lmu(q);
            dnumLnu = dnu-Lnu(q);
            Icart(q) = Isph(iR(q),imu(q),inu(q)) ...
                * drmLR * dmumLmu * dnumLnu + ...
                Isph(iR(q)+1,imu(q),inu(q)) ...
                * LR(q) * dmumLmu * dnumLnu + ...
                Isph(iR(q),imu(q)+1,inu(q)) ...
                * drmLR * Lmu(q) * dnumLnu + ...
                Isph(iR(q),imu(q),inu(q)+1) ...
                * drmLR * dmumLmu * Lnu(q) + ...
                Isph(iR(q)+1,imu(q),inu(q)+1) ...
                * LR(q) * dmumLmu * Lnu(q) + ...
                Isph(iR(q),imu(q)+1,inu(q)+1) ...
                * drmLR * Lmu(q) * Lnu(q) + ...
                Isph(iR(q)+1,imu(q)+1,inu(q)) ...
                * LR(q) * Lmu(q) * dnumLnu + ...
                Isph(iR(q)+1,imu(q)+1,inu(q)) ...
                * LR(q) * Lmu(q) * Lnu(q);
        end
        %size(Icart)
        obj.rawData_cart(:,:,:,currFrame) = Icart/(dr*dmu*dnu);
    end
end

